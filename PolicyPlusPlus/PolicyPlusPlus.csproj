<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <RootNamespace>PolicyPlusPlus</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <UseWinUI>true</UseWinUI>
    <Nullable>enable</Nullable>
	<ApplicationIcon>Assets\AppIcon.ico</ApplicationIcon>
    <AssemblyName>PolicyPlusPlus</AssemblyName>
    <RuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimeIdentifiers>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
	<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <Configurations>Debug;Release;Debug-Unpackaged;Release-Unpackaged</Configurations>
    <Packaged>true</Packaged>
    <Packaged Condition="'$(Configuration)' == 'Debug-Unpackaged' Or '$(Configuration)' == 'Release-Unpackaged'">false</Packaged>
    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
    <AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppxBundle>Always</AppxBundle>
    <AppxBundlePlatforms>x86|x64|arm64</AppxBundlePlatforms>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
    <GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
  </PropertyGroup>

  <!-- Unpackaged (non Store) build: enable Velopack based updating -->
  <PropertyGroup Condition="'$(Packaged)' != 'true'">
	<EnableMsixTooling>true</EnableMsixTooling>
	<WindowsPackageType>None</WindowsPackageType>
	<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
	<PublishProfile>Properties\PublishProfiles\win-$(Platform)-standalone.pubxml</PublishProfile>
    <DefineConstants>$(DefineConstants);USE_VELOPACK</DefineConstants>
  </PropertyGroup>

  <!-- Packaged (Store) build: use Store update mechanism -->
  <PropertyGroup Condition="'$(Packaged)' == 'true'">
	<EnableMsixTooling>true</EnableMsixTooling>
	<WindowsAppSDKSelfContained>false</WindowsAppSDKSelfContained>
	<PublishProfile>Properties\PublishProfiles\win-$(Platform).pubxml</PublishProfile>
    <DefineConstants>$(DefineConstants);USE_STORE_UPDATE</DefineConstants>
  </PropertyGroup>

	<PropertyGroup Condition="'$(WindowsAppSDKSelfContained)'=='true'">
		<WindowsAppSDKBootstrapInitialize>false</WindowsAppSDKBootstrapInitialize>
	</PropertyGroup>
	
    <ItemGroup>
      <EmbeddedResource Include="Assets\AppIcon.ico" />
    </ItemGroup>

  <!-- Common packages -->
  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Sizers" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.DataGrid" Version="7.1.2" />
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.2.0" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.4948" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.7.250606001" />
  </ItemGroup>

  <!-- Velopack referenced only for unpackaged builds -->
  <ItemGroup Condition="'$(Packaged)' != 'true'">
    <PackageReference Include="Velopack" Version="0.0.1298" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\PolicyPlusCore\PolicyPlusCore.csproj" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug-Unpackaged'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
    <PublishSingleFile>False</PublishSingleFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(PublishSingleFile)'=='true'">
    <PublishReadyToRun>false</PublishReadyToRun>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
    <UseAppHost>true</UseAppHost>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <Target Name="RemoveFoldersWithMuiFiles" AfterTargets="Build">
    <ItemGroup>
      <RemovingFiles Include="$(OutDir)*\*.mui" Exclude="$(OutDir)en-us\*.mui" />
      <RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" />
    </ItemGroup>
    <RemoveDir Directories="@(RemovingFolders)" />
  </Target>
  <Target Name="GenerateGitVersion" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <_GitVersionFile>$(IntermediateOutputPath)gitversion.txt</_GitVersionFile>
    </PropertyGroup>
    <Exec Command="git describe --tags --always --dirty &gt; &quot;$(_GitVersionFile)&quot;" IgnoreExitCode="true" />
    <ReadLinesFromFile File="$(_GitVersionFile)">
      <Output TaskParameter="Lines" PropertyName="GitVersionRaw" />
    </ReadLinesFromFile>
    <PropertyGroup>
      <GitVersion Condition="'$(GitVersionRaw)'==''">dev</GitVersion>
      <GitVersion Condition="'$(GitVersionRaw)'!=''">$(GitVersionRaw)</GitVersion>
    </PropertyGroup>
    <WriteLinesToFile File="$(IntermediateOutputPath)gitversion.runtime.txt" Overwrite="true" Lines="$(GitVersion)" />
    <ItemGroup>
      <None Include="$(IntermediateOutputPath)gitversion.runtime.txt">
        <Link>gitversion.txt</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>
  </Target>
</Project>