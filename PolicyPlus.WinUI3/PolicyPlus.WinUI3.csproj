<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
    <RootNamespace>PolicyPlus.WinUI3</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <WindowsPackageType>None</WindowsPackageType>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Nullable>enable</Nullable>
    <WindowsAppSDKBootstrapInitialize>true</WindowsAppSDKBootstrapInitialize>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
  </PropertyGroup>

  <!-- When using Windows App SDK self-contained (app-local runtime), do not bootstrap -->
  <PropertyGroup Condition="'$(WindowsAppSDKSelfContained)'=='true'">
    <WindowsAppSDKBootstrapInitialize>false</WindowsAppSDKBootstrapInitialize>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="Assets\*.ico" />
  </ItemGroup>

  <Choose>
    <When Condition="Exists('Assets\\AppIcon.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\AppIcon.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\app.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\app.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\icon.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\icon.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\PolicyPlus.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\PolicyPlus.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\PolicyPlusWinUI3.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\PolicyPlusWinUI3.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
  </Choose>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Sizers" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.DataGrid" Version="7.1.2" />
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.2.0" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.4948" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.7.250606001" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\PolicyPlus.Core\PolicyPlus.Core.csproj" />
  </ItemGroup>

  <!-- Rely on default items for XAML and code-behind, and for MainWindow\*.cs partials -->

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <PublishReadyToRun>True</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
    <PublishSingleFile>False</PublishSingleFile>
  </PropertyGroup>

  <!-- Single-file self-contained publish tuning for WinUI 3 / Windows App SDK -->
  <PropertyGroup Condition="'$(PublishSingleFile)'=='true'">
    <PublishReadyToRun>false</PublishReadyToRun>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
    <UseAppHost>true</UseAppHost>
  </PropertyGroup>

  <Target Name="RemoveFoldersWithMuiFiles" AfterTargets="Build">
    <ItemGroup>
      <RemovingFiles Include="$(OutDir)*\*.mui" Exclude="$(OutDir)en-us\*.mui" />
      <RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" />
    </ItemGroup>
    <RemoveDir Directories="@(RemovingFolders)" />
  </Target>
</Project>