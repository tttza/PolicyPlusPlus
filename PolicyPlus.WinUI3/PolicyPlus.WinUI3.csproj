<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
    <RootNamespace>PolicyPlus.WinUI3</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <UseWinUI>true</UseWinUI>
    <Nullable>enable</Nullable>
    <WindowsAppSDKBootstrapInitialize>true</WindowsAppSDKBootstrapInitialize>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <ApplicationIcon>Assets\AppIcon.ico</ApplicationIcon>
	<PublishProfile>Properties\PublishProfiles\win-$(Platform).pubxml</PublishProfile>
	<AssemblyName>PolicyPlusPlus</AssemblyName>
	<Configurations>Debug;Release;Debug-Unpackaged;Release-Unpackaged</Configurations>
      <Packaged>true</Packaged>
	  <Packaged Condition="'$(Configuration)' == 'Debug-Unpackaged' Or '$(Configuration)' == 'Release-Unpackaged'">false</Packaged>
  </PropertyGroup>

    <PropertyGroup Condition="'$(Packaged)' != 'true'">
	    <EnableMsixTooling>false</EnableMsixTooling>
	    <WindowsPackageType>None</WindowsPackageType>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Packaged)' == 'true'">
	    <EnableMsixTooling>true</EnableMsixTooling>
    </PropertyGroup>


  <PropertyGroup Condition="'$(WindowsAppSDKSelfContained)'=='true'">
    <WindowsAppSDKBootstrapInitialize>false</WindowsAppSDKBootstrapInitialize>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include="Assets\*.ico" />
  </ItemGroup>
  <Choose>
    <When Condition="Exists('Assets\\AppIcon.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\AppIcon.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\app.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\app.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\icon.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\icon.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\PolicyPlus.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\PolicyPlus.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
    <When Condition="Exists('Assets\\PolicyPlusWinUI3.ico')">
      <PropertyGroup>
        <ApplicationIcon>Assets\PolicyPlusWinUI3.ico</ApplicationIcon>
      </PropertyGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Page Remove="Windows\LogViewerWindow.xaml" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Sizers" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.DataGrid" Version="7.1.2" />
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.2.0" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.4948" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.7.250606001" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PolicyPlus.Core\PolicyPlus.Core.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Controls" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Windows\LogViewerWindow.xaml">
      <Generator>MSBuild:Compile</Generator>
    </None>
  </ItemGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug-Unpackaged'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <PublishReadyToRun>False</PublishReadyToRun>
    <PublishTrimmed>False</PublishTrimmed>
    <PublishSingleFile>False</PublishSingleFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(PublishSingleFile)'=='true'">
    <PublishReadyToRun>false</PublishReadyToRun>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
    <UseAppHost>true</UseAppHost>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-Unpackaged|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|x86'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release-Unpackaged|ARM64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <Target Name="RemoveFoldersWithMuiFiles" AfterTargets="Build">
    <ItemGroup>
      <RemovingFiles Include="$(OutDir)*\*.mui" Exclude="$(OutDir)en-us\*.mui" />
      <RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" />
    </ItemGroup>
    <RemoveDir Directories="@(RemovingFolders)" />
  </Target>
  <Target Name="GenerateGitVersion" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <_GitVersionFile>$(IntermediateOutputPath)gitversion.txt</_GitVersionFile>
    </PropertyGroup>
    <Exec Command="git describe --tags --always --dirty &gt; &quot;$(_GitVersionFile)&quot;" IgnoreExitCode="true" />
    <ReadLinesFromFile File="$(_GitVersionFile)">
      <Output TaskParameter="Lines" PropertyName="GitVersionRaw" />
    </ReadLinesFromFile>
    <PropertyGroup>
      <GitVersion Condition="'$(GitVersionRaw)'==''">dev</GitVersion>
      <GitVersion Condition="'$(GitVersionRaw)'!=''">$(GitVersionRaw)</GitVersion>
    </PropertyGroup>
    <WriteLinesToFile File="$(IntermediateOutputPath)gitversion.runtime.txt" Overwrite="true" Lines="$(GitVersion)" />
    <ItemGroup>
      <None Include="$(IntermediateOutputPath)gitversion.runtime.txt">
        <Link>gitversion.txt</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <Page Include="Windows\LogViewerWindow.xaml" />
  </ItemGroup>
</Project>