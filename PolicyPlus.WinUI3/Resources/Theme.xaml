<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Resources/ThemeColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Global corner radius (was Double; must be CornerRadius to apply) -->
    <CornerRadius x:Key="ControlCornerRadius">10</CornerRadius>
    <Thickness x:Key="ToolbarButtonMargin">0,0,6,0</Thickness>
    <Thickness x:Key="ButtonPadding">12,6,12,6</Thickness>

    <!-- Keep default visuals for normal buttons; only size/rounding/spacing -->
    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!-- Primary button (Accent) with same sizing -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="88" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!-- Danger (soft) -->
    <Style x:Key="DangerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource DangerBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource DangerForegroundBrush}" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="88" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!-- Apply button: green + explicit hover/pressed so it does not turn white -->
    <Style x:Key="ApplyButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="88" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Background" Value="{ThemeResource ApplyBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource ApplyForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ApplyBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource ApplyBrushHover}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ApplyForegroundBrush}" />
                                        <Setter Target="Bd.BorderBrush" Value="{ThemeResource ApplyBrushHover}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource ApplyBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ApplyForegroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                                        <Setter Target="Bd.Background" Value="{ThemeResource ControlFillColorDisabledBrush}" />
                                        <Setter Target="Bd.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Preview button: informational distinct blue -->
    <Style x:Key="PreviewButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="96" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Background" Value="{ThemeResource PreviewBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource PreviewForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource PreviewBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource PreviewBrushHover}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PreviewForegroundBrush}" />
                                        <Setter Target="Bd.BorderBrush" Value="{ThemeResource PreviewBrushHover}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource PreviewBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PreviewForegroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
                                        <Setter Target="Bd.Background" Value="{ThemeResource ControlFillColorDisabledBrush}" />
                                        <Setter Target="Bd.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Subtle outline style for icon/text buttons -->
    <Style x:Key="IconAccentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource ToolbarButtonMargin}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="72" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!-- ContentDialog default: make Primary button use Apply style -->
    <Style TargetType="ContentDialog">
        <Setter Property="PrimaryButtonStyle" Value="{StaticResource ApplyButtonStyle}" />
    </Style>
</ResourceDictionary>